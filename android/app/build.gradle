apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'

android {
    namespace "com.biggboss.teluguvote"
    compileSdkVersion rootProject.ext.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    defaultConfig {
        applicationId "com.biggboss.teluguvote"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 4
        versionName "1.0.3"
        multiDexEnabled true
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dependenciesInfo {
        includeInApk false
        includeInBundle false
    }

    splits {
        abi {
            reset()
            enable false
            universalApk false
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                def ksPath = MYAPP_UPLOAD_STORE_FILE
                def ksFile = file(ksPath)
                if (!ksFile.exists()) {
                    ksFile = file("../" + ksPath)
                }
                storeFile ksFile
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE*', 'META-INF/NOTICE*', 'META-INF/*.kotlin_module']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    // Manifest placeholders for AdMob
    defaultConfig.manifestPlaceholders = [
        ADMOB_APP_ID: project.hasProperty('ADMOB_APP_ID') ? ADMOB_APP_ID : 'ca-app-pub-3940256099942544~3347511713'
    ]
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    
    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-native:+"
    
    // MultiDex support (AndroidX)
    implementation 'androidx.multidex:multidex:2.0.1'
    
    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.3.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-perf'
    
    // AdMob
    implementation 'com.google.android.gms:play-services-ads:22.4.0'
    
    
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.fbjni'
    }
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.fbjni'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.fbjni'
    }

    if (enableHermes) {
        //noinspection GradleDynamicVersion
        implementation("com.facebook.react:hermes-engine:+")
    } else {
        implementation jscFlavor
    }
}

// Vector Icons task
apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)

// Skip AAR metadata check
tasks.whenTaskAdded { task ->
    if (task.name.contains("checkDebugAarMetadata")) {
        task.enabled = false
    }
}